using UnityEngine;
using System.Collections;
using System;

public class GameMasterScript : MonoBehaviour {

    //Main ressources of the game, >0
    public uint resMoney, resElectricity, resWorkforce, resFood;
    // Production in Unit/Second, >0
    public uint prodMoney, prodElectricity, prodWorkforce, prodFood;
    private int production_basespeed = 1;


    /* Resource Description
    Money: Generated by Towns(paid for electricity), Unit: Euro
    Electricity: Generated by Power Facilitys(Wind, Atom, Wasser) , Unit: Mega Watt
    Workforce: ???
    Food: Generated by Farms, user by Towns to grow, Unit: Tons
    */

    // Use this for initialization
    void Start ()
    {
	    
	}
	
	// Update is called once per frame
	void Update ()
    {
        Produce(production_basespeed);

        
    }

    private void Produce(int speed)
    {
        // Production of Resources is handled here. Using checked to check for uint-Overflow
        try
        {
            checked
            {
                resMoney += (uint)(prodMoney * Time.deltaTime);
            }
        }
        catch (OverflowException e)
        {
            Console.Write(e.Message);
        }

        try
        {
            checked
            {
                resElectricity += (uint)(prodElectricity * Time.deltaTime);
            }
        }
        catch (OverflowException e)
        {
            Console.Write(e.Message);
        }

        try
        {
            checked
            {
                resWorkforce += (uint)(prodWorkforce * Time.deltaTime);
            }
        }
        catch (OverflowException e)
        {
            Console.Write(e.Message);
        }

        try
        {
            checked
            {
                resFood += (uint)(prodFood * Time.deltaTime);
            }
        }
        catch (OverflowException e)
        {
            Console.Write(e.Message);
        }
    }

    //Time in seconds since the app was opened last
    public int lastDowntime { get
        {
            return 0;
        }
    }
}
